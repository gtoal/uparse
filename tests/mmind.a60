b̲e̲g̲i̲n̲
   i̲n̲t̲e̲g̲e̲r̲ COLOR1,COLOR2,COLOR3,COLOR4,
     ROW,COL,OLDROW,OLDCOL,MAXCOL;
   i̲n̲t̲e̲g̲e̲r̲ a̲r̲r̲a̲y̲ HYP[1:4],BOARD[1:10,1:4],WHITES,BLACKS[1:10];
   b̲o̲o̲l̲e̲a̲n̲ a̲r̲r̲a̲y̲ OLDMAT,NEWMAT[1:4];

   p̲r̲o̲c̲e̲d̲u̲r̲e̲ PATERN(ROW);
      v̲a̲l̲u̲e̲ ROW; i̲n̲t̲e̲g̲e̲r̲ ROW;
   b̲e̲g̲i̲n̲
      i̲n̲t̲e̲g̲e̲r̲ COL;
      f̲o̲r̲ COL:=1,2,3,4 d̲o̲
           i̲f̲ BOARD[ROW,COL]=1 t̲h̲e̲n̲ out string(1,“RED ”)
           e̲l̲s̲e̲ i̲f̲ BOARD[ROW,COL]=2 t̲h̲e̲n̲ out string(1,“BLUE ”)
           e̲l̲s̲e̲ i̲f̲ BOARD[ROW,COL]=3 t̲h̲e̲n̲ out string(1,“GREEN ”)
           e̲l̲s̲e̲ i̲f̲ BOARD[ROW,COL]=4 t̲h̲e̲n̲ out string(1,“YELLOW ”)
           e̲l̲s̲e̲ i̲f̲ BOARD[ROW,COL]=5 t̲h̲e̲n̲ out string(1,“BLACK ”)
           e̲l̲s̲e̲ i̲f̲ BOARD[ROW,COL]=6 t̲h̲e̲n̲ out string(1,“WHITE ”)
         e̲l̲s̲e̲ out string(1,“SPACE ”);
   e̲n̲d̲ PRINT PATTERN;

   p̲r̲o̲c̲e̲d̲u̲r̲e̲ PRINTROW;
   b̲e̲g̲i̲n̲ out string(1,“\nMy guess ”); out integer(1,ROW);
      out string(1,“ is: ”);
      PATERN(ROW);
   e̲n̲d̲ PRINT THE CURRENT ROW;



   START: out string(1,“\n\nMastermind Codebreaker\nVersion 1 or 2 ?”);
   in integer(0,MAXCOL);
   i̲f̲ ¬(MAXCOL=1 ∨ MAXCOL=2) t̲h̲e̲n̲ g̲o̲t̲o̲ START;
   MAXCOL:=MAXCOL+5;
   ROW:=1;

   f̲o̲r̲ COLOR1:=1 s̲t̲e̲p̲ 1 u̲n̲t̲i̲l̲ MAXCOL d̲o̲
        f̲o̲r̲ COLOR2:=2 s̲t̲e̲p̲ 1 u̲n̲t̲i̲l̲ MAXCOL,1 d̲o̲
           f̲o̲r̲ COLOR3:=3 s̲t̲e̲p̲ 1 u̲n̲t̲i̲l̲ MAXCOL,1,2 d̲o̲
              f̲o̲r̲ COLOR4:=4 s̲t̲e̲p̲ 1 u̲n̲t̲i̲l̲ MAXCOL,1,2,3 d̲o̲
               b̲e̲g̲i̲n̲
                  i̲n̲t̲e̲g̲e̲r̲ BLACK,WHITE;
                  HYP[1]:=COLOR1; HYP[2]:=COLOR2;
                  HYP[3]:=COLOR3; HYP[4]:=COLOR4;
                  c̲o̲m̲m̲e̲n̲t̲ SET UP THE HYPOTHESIS ROW.
                    A ROW IS CONSISTENT WITH ALL PREVIOUS ROWS IF IT
                    GIVES RISE TO THE SAME NUMBER OF BLACK AND WHITE INFORMATION
                    PEGS AS THOSE ROWS;
                  f̲o̲r̲ OLDROW:=1 s̲t̲e̲p̲ 1 u̲n̲t̲i̲l̲ ROW-1 d̲o̲
                     b̲e̲g̲i̲n̲
                        BLACK:=0;
                        f̲o̲r̲ COL:=1,2,3,4 d̲o̲
                           b̲e̲g̲i̲n̲
                              b̲o̲o̲l̲e̲a̲n̲ TEMP;
                              TEMP := OLDMAT[COL] := NEWMAT[COL] := HYP[COL]=BOARD[OLDROW,COL];
                              i̲f̲ TEMP t̲h̲e̲n̲ BLACK:=BLACK+1;
                           e̲n̲d̲;
                        i̲f̲ BLACK≠BLACKS[OLDROW] t̲h̲e̲n̲ g̲o̲t̲o̲ NOT VIABLE;
                        WHITE:=0;
                        f̲o̲r̲ COL:=1,2,3 d̲o̲
                             f̲o̲r̲ OLDCOL:=COL+1 s̲t̲e̲p̲ 1 u̲n̲t̲i̲l̲ 4 d̲o̲
                              b̲e̲g̲i̲n̲
                                 i̲f̲ HYP[COL]=BOARD[OLDROW,OLDCOL] t̲h̲e̲n̲
                                 b̲e̲g̲i̲n̲
                                    i̲f̲ ¬(NEWMAT[COL] ∨ OLDMAT[OLDCOL]) t̲h̲e̲n̲
                                    b̲e̲g̲i̲n̲
                                       NEWMAT[COL]:=OLDMAT[OLDCOL]:=t̲r̲u̲e̲;
                                       WHITE:=WHITE+1;
                                    e̲n̲d̲
                                 e̲n̲d̲;
                                 i̲f̲ HYP[OLDCOL]=BOARD[OLDROW,COL] t̲h̲e̲n̲
                                 b̲e̲g̲i̲n̲
                                    i̲f̲ ¬(NEWMAT[OLDCOL] ∨ OLDMAT[COL]) t̲h̲e̲n̲
                                    b̲e̲g̲i̲n̲
                                       NEWMAT[OLDCOL]:=OLDMAT[COL]:=t̲r̲u̲e̲;
                                       WHITE:=WHITE+1;
                                    e̲n̲d̲
                                 e̲n̲d̲
                              e̲n̲d̲;
                        i̲f̲ WHITE≠WHITES[OLDROW] t̲h̲e̲n̲ g̲o̲t̲o̲ NOT VIABLE;
                     e̲n̲d̲ LOOK AT EACH PREVIOUS ROW;
                  c̲o̲m̲m̲e̲n̲t̲ AT THIS POINT THE HYPOTHESIS ROW IS VIABLE;
                  f̲o̲r̲ COL:=1 s̲t̲e̲p̲ 1 u̲n̲t̲i̲l̲ 4 d̲o̲ BOARD[ROW,COL]:=HYP[COL];
                  PRINTROW;
                  JUNK:             out string(1,“\nHow many black pegs ? ”);
                  in integer(0,BLACKS[ROW]);
                  i̲f̲ BLACKS[ROW]=4 t̲h̲e̲n̲
                  b̲e̲g̲i̲n̲
                     out string(1,“Thanks for the game”);
                     g̲o̲t̲o̲ START;
                  e̲n̲d̲ PROBLEM SOLVED
                    e̲l̲s̲e̲ i̲f̲ BLACKS[ROW]=3 t̲h̲e̲n̲ WHITES[ROW]:=0
                  e̲l̲s̲e̲
                  b̲e̲g̲i̲n̲
                     i̲f̲ BLACKS[ROW]<0 ∨ BLACKS[ROW]>4 t̲h̲e̲n̲
                     b̲e̲g̲i̲n̲
                        out string(1,“TWIT !!”); g̲o̲t̲o̲ JUNK;
                     e̲n̲d̲;
                     out string(1,“How many white pegs ? ”);
                     in integer(0,WHITES[ROW]);
                     i̲f̲ WHITES[ROW]<0 ∨
                       WHITES[ROW]+BLACKS[ROW]>4 t̲h̲e̲n̲
                     b̲e̲g̲i̲n̲ out string(1,“TWIT !!”); g̲o̲t̲o̲ JUNK;
                     e̲n̲d̲
                  e̲n̲d̲;
                  ROW:=ROW+1;
                  i̲f̲ ROW=10 t̲h̲e̲n̲
                  b̲e̲g̲i̲n̲
                     out string(1,“\nWELL DONE, YOU WIN !!”);
                     g̲o̲t̲o̲ START;
                  e̲n̲d̲;

                  NOT VIABLE:
               e̲n̲d̲ LOOK AT EACH POSSIBLE ROW;

   out string(1,“\nTwit !!! you made a mistake”);
   g̲o̲t̲o̲ START;
e̲n̲d̲ OF MASTERMIND CODEBREAKER;
